{
   "NumberOfKilledMutations":7,
   "ExecutionTime":"00:00:07.2876848",
   "TotalNumberOfMutations":7,
   "NumberOfSurvivedMutations":0,
   "Mutations":[
      {
         "Id":"dtb31dxl.prc",
         "ProjectName":"Assignment1",
         "FileName":"MediaIntercecao.cs",
         "Orginal":"!intercecao.Any()",
         "FullOrginal":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Mutation":"intercecao.Any()",
         "FullMutation":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Survived":false,
         "CompilationResult":{
            "IsSuccess":true,
            "Errors":[
               
            ]
         },
         "TestsRunCount":5,
         "FailedTests":[
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Retornar_Interse‡Æo",
               "Name":"Deve_Retornar_Interse‡Æo",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<1>. Actual:<0>. "
            },
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Retornar_0_Caso_NÆo_Exista_Interse‡Æo",
               "Name":"Deve_Retornar_0_Caso_NÆo_Exista_Interse‡Æo",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<0>. Actual:<NaN>. "
            },
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Calcular_A_Media_Da_Interse‡Æo",
               "Name":"Deve_Calcular_A_Media_Da_Interse‡Æo",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<2>. Actual:<0>. "
            }
         ],
         "Location":{
            "Line":"@(28:18)",
            "Where":"mediaIntersecao(M)",
            "Kind":"Method"
         },
         "MutationName":"Proj: Assignment1, File: MediaIntercecao.cs(mediaIntersecao(M) - @(28:18))",
         "UnexpectedError":null,
         "Hash":"405BA5A36042B4CE19B26C6CC4D58764",
         "Category":{
            "HeadCategory":"ConditionalBoundary",
            "Subcategory":"LogicalNotExpression"
         }
      },
      {
         "Id":"0qbaaa02.knl",
         "ProjectName":"Assignment1",
         "FileName":"MediaIntercecao.cs",
         "Orginal":"item_m == item_n",
         "FullOrginal":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Mutation":"item_m != item_n",
         "FullMutation":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m != item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Survived":false,
         "CompilationResult":{
            "IsSuccess":true,
            "Errors":[
               
            ]
         },
         "TestsRunCount":5,
         "FailedTests":[
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Retornar_Interse‡Æo",
               "Name":"Deve_Retornar_Interse‡Æo",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<1>. Actual:<2>. "
            },
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Retornar_0_Caso_NÆo_Exista_Interse‡Æo",
               "Name":"Deve_Retornar_0_Caso_NÆo_Exista_Interse‡Æo",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<0>. Actual:<2>. "
            }
         ],
         "Location":{
            "Line":"@(20:25)",
            "Where":"mediaIntersecao(M)",
            "Kind":"Method"
         },
         "MutationName":"Proj: Assignment1, File: MediaIntercecao.cs(mediaIntersecao(M) - @(20:25))",
         "UnexpectedError":null,
         "Hash":"287C3FEED22CD87046DF53F09387D86E",
         "Category":{
            "HeadCategory":"NegateCondtional",
            "Subcategory":"EqualsEqualsToken"
         }
      },
      {
         "Id":"3wl3duee.vrr",
         "ProjectName":"Assignment1",
         "FileName":"MediaIntercecao.cs",
         "Orginal":"somaIntercecao / intercecao.Count",
         "FullOrginal":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Mutation":"somaIntercecao * intercecao.Count",
         "FullMutation":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao * intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Survived":false,
         "CompilationResult":{
            "IsSuccess":true,
            "Errors":[
               
            ]
         },
         "TestsRunCount":5,
         "FailedTests":[
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Calcular_A_Media_Da_Interse‡Æo",
               "Name":"Deve_Calcular_A_Media_Da_Interse‡Æo",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<2>. Actual:<8>. "
            }
         ],
         "Location":{
            "Line":"@(37:29)",
            "Where":"mediaIntersecao(M)",
            "Kind":"Method"
         },
         "MutationName":"Proj: Assignment1, File: MediaIntercecao.cs(mediaIntersecao(M) - @(37:29))",
         "UnexpectedError":null,
         "Hash":"6597DDB283B124F62EA77B9337521679",
         "Category":{
            "HeadCategory":"Math",
            "Subcategory":"SlashToken"
         }
      },
      {
         "Id":"er4pyplz.pdb",
         "ProjectName":"Assignment1",
         "FileName":"MediaIntercecao.cs",
         "Orginal":"                return 0;\r\n",
         "FullOrginal":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Mutation":"return 1;",
         "FullMutation":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\nreturn 1;\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Survived":false,
         "CompilationResult":{
            "IsSuccess":true,
            "Errors":[
               
            ]
         },
         "TestsRunCount":5,
         "FailedTests":[
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Retornar_0_Caso_Entrada_m_Vazio",
               "Name":"Deve_Retornar_0_Caso_Entrada_m_Vazio",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<0>. Actual:<1>. "
            },
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Retornar_0_Caso_Entrada_n_Vazio",
               "Name":"Deve_Retornar_0_Caso_Entrada_n_Vazio",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<0>. Actual:<1>. "
            }
         ],
         "Location":{
            "Line":"@(13:17)",
            "Where":"mediaIntersecao(M)",
            "Kind":"Method"
         },
         "MutationName":"Proj: Assignment1, File: MediaIntercecao.cs(mediaIntersecao(M) - @(13:17))",
         "UnexpectedError":null,
         "Hash":"A8B253F5A4D3FAC7BE3B3056443FA527",
         "Category":{
            "HeadCategory":"ReturnValue",
            "Subcategory":"NumericLiteralExpression"
         }
      },
      {
         "Id":"44rer1qp.tom",
         "ProjectName":"Assignment1",
         "FileName":"MediaIntercecao.cs",
         "Orginal":"                        intercecao.Add(item_m);\r\n",
         "FullOrginal":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Mutation":"/*intercecao.Add(item_m);*/",
         "FullMutation":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n/*intercecao.Add(item_m);*/                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Survived":false,
         "CompilationResult":{
            "IsSuccess":true,
            "Errors":[
               
            ]
         },
         "TestsRunCount":5,
         "FailedTests":[
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Retornar_Interse‡Æo",
               "Name":"Deve_Retornar_Interse‡Æo",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<1>. Actual:<0>. "
            },
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Calcular_A_Media_Da_Interse‡Æo",
               "Name":"Deve_Calcular_A_Media_Da_Interse‡Æo",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<2>. Actual:<0>. "
            }
         ],
         "Location":{
            "Line":"@(22:25)",
            "Where":"mediaIntersecao(M)",
            "Kind":"Method"
         },
         "MutationName":"Proj: Assignment1, File: MediaIntercecao.cs(mediaIntersecao(M) - @(22:25))",
         "UnexpectedError":null,
         "Hash":"6A5058F14A253E5F68B724A446E78124",
         "Category":{
            "HeadCategory":"MethodCall",
            "Subcategory":"InvocationExpression"
         }
      },
      {
         "Id":"xizcsuni.mff",
         "ProjectName":"Assignment1",
         "FileName":"MediaIntercecao.cs",
         "Orginal":"                return 0;\r\n",
         "FullOrginal":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Mutation":"return 1;",
         "FullMutation":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\nreturn 1;\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Survived":false,
         "CompilationResult":{
            "IsSuccess":true,
            "Errors":[
               
            ]
         },
         "TestsRunCount":5,
         "FailedTests":[
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Retornar_0_Caso_NÆo_Exista_Interse‡Æo",
               "Name":"Deve_Retornar_0_Caso_NÆo_Exista_Interse‡Æo",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<0>. Actual:<1>. "
            }
         ],
         "Location":{
            "Line":"@(29:17)",
            "Where":"mediaIntersecao(M)",
            "Kind":"Method"
         },
         "MutationName":"Proj: Assignment1, File: MediaIntercecao.cs(mediaIntersecao(M) - @(29:17))",
         "UnexpectedError":null,
         "Hash":"A8B253F5A4D3FAC7BE3B3056443FA527",
         "Category":{
            "HeadCategory":"ReturnValue",
            "Subcategory":"NumericLiteralExpression"
         }
      },
      {
         "Id":"fx4ufamu.zia",
         "ProjectName":"Assignment1",
         "FileName":"MediaIntercecao.cs",
         "Orginal":"                somaIntercecao += numero;\r\n",
         "FullOrginal":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n                somaIntercecao += numero;\r\n            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Mutation":"/*somaIntercecao += numero;*/",
         "FullMutation":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Assignment1\r\n{\r\n    public class MediaIntercecao\r\n    {\r\n        public float mediaIntersecao(List<float> m, List<float> n)\r\n        {\r\n            if (!m.Any() || !n.Any())\r\n                return 0;\r\n\r\n            var intercecao = new List<float>();\r\n            foreach (var item_m in m)\r\n            {\r\n                foreach (var item_n in n)\r\n                {\r\n                    if (item_m == item_n)\r\n                    {\r\n                        intercecao.Add(item_m);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!intercecao.Any())\r\n                return 0;\r\n\r\n            var somaIntercecao = 0f;\r\n            foreach (var numero in intercecao)\r\n            {\r\n/*somaIntercecao += numero;*/            }\r\n\r\n            var resultado = somaIntercecao / intercecao.Count;\r\n            return resultado;\r\n        }\r\n    }\r\n}\r\n",
         "Survived":false,
         "CompilationResult":{
            "IsSuccess":true,
            "Errors":[
               
            ]
         },
         "TestsRunCount":5,
         "FailedTests":[
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Calcular_A_Media_Da_Interse‡Æo",
               "Name":"Deve_Calcular_A_Media_Da_Interse‡Æo",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<2>. Actual:<0>. "
            },
            {
               "FullName":"Test_Assignment1.MediaIntersecaoTeste.Deve_Retornar_Interse‡Æo",
               "Name":"Deve_Retornar_Interse‡Æo",
               "IsSuccess":false,
               "InnerText":"Assert.AreEqual failed. Expected:<1>. Actual:<0>. "
            }
         ],
         "Location":{
            "Line":"@(34:17)",
            "Where":"mediaIntersecao(M)",
            "Kind":"Method"
         },
         "MutationName":"Proj: Assignment1, File: MediaIntercecao.cs(mediaIntersecao(M) - @(34:17))",
         "UnexpectedError":null,
         "Hash":"A94D65C58E985929363C6AE38D044902",
         "Category":{
            "HeadCategory":"MethodCall",
            "Subcategory":"InvocationExpression"
         }
      }
   ]
}